// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using APWeb.TempModels;
using Microsoft.EntityFrameworkCore;

namespace APWeb.Models;

public partial class ApplicationDbContext : DbContext
{
    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<PurchaseCostChangeRequest> PurchaseCostChangeRequests { get; set; }

    public virtual DbSet<Price> Prices { get; set; }

    public virtual DbSet<Department> Departments { get; set; }

    public virtual DbSet<Inventory> Inventories { get; set; }

    public virtual DbSet<Invoice> Invoices { get; set; }

    public virtual DbSet<InvoiceItem> InvoiceItems { get; set; }

    public virtual DbSet<Node> Nodes { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderItem> OrderItems { get; set; }

    public virtual DbSet<OrderStatus> OrderStatuses { get; set; }

    public virtual DbSet<OrderType> OrderTypes { get; set; }

    public virtual DbSet<PO> POs { get; set; }

    public virtual DbSet<PO_Detail> PO_Details { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<ProductItem> ProductItems { get; set; }

    public virtual DbSet<ProductMovement> ProductMovements { get; set; }

    public virtual DbSet<ProductMovementItem> ProductMovementItems { get; set; }

    public virtual DbSet<Products_Store> Products_Stores { get; set; }

    public virtual DbSet<Store> Stores { get; set; }

    public virtual DbSet<StorageLocation> StorageLocation { get; set; }

    public virtual DbSet<StoreFloorLocation> StoreFloorLocations { get; set; }

    public virtual DbSet<StoreFloorLocationType> StoreFloorLocationTypes { get; set; }

    public virtual DbSet<Supplier> Suppliers { get; set; }

    public virtual DbSet<Suppliers_Store> Suppliers_Stores { get; set; }

    public virtual DbSet<Warehouse> Warehouses { get; set; }

    public virtual DbSet<WarehouseStorageArea> WarehouseStorageAreas { get; set; }

    public virtual DbSet<WarehouseStorageLocation> WarehouseStorageLocations { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Department>(entity =>
        {
            entity.ToTable("Department", tb =>
                {
                    tb.HasTrigger("MSmerge_del_E2A3270F207146B592BBDA48B0B34DB2");
                    tb.HasTrigger("MSmerge_ins_E2A3270F207146B592BBDA48B0B34DB2");
                    tb.HasTrigger("MSmerge_upd_E2A3270F207146B592BBDA48B0B34DB2");
                });

            entity.Property(e => e.DepartmentID).ValueGeneratedNever();
            entity.Property(e => e.DepartmentName)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Inventory>(entity =>
        {
            entity.ToTable("Inventory", tb =>
                {
                    tb.HasTrigger("MSmerge_del_01008334ECFF42D08038C097A13C305B");
                    tb.HasTrigger("MSmerge_ins_01008334ECFF42D08038C097A13C305B");
                    tb.HasTrigger("MSmerge_upd_01008334ECFF42D08038C097A13C305B");
                });

            entity.Property(e => e.InventoryID).ValueGeneratedNever();
            entity.Property(e => e.CurrentCost).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.CurrentStock).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.LastReplenished)
                .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                .HasColumnType("datetime");
            entity.Property(e => e.ModTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ReorderPoint).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.SafetyStock).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Item).WithMany(p => p.Inventories)
                .HasForeignKey(d => d.ItemID)
                .HasConstraintName("FK_Inventory_ItemID");

            entity.HasOne(d => d.Location).WithMany(p => p.Inventories)
                .HasForeignKey(d => d.LocationID)
                .HasConstraintName("FK_Inventory_LocationID");
        });

        modelBuilder.Entity<PurchaseCostChangeRequest>(entity =>
        {
            entity.ToTable("PurchaseCostChangeRequest", "dbo");
            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_337D399BCFDB43A5ACE0B0CAB38DCD38");
                    tb.HasTrigger("MSmerge_ins_337D399BCFDB43A5ACE0B0CAB38DCD38");
                    tb.HasTrigger("MSmerge_upd_337D399BCFDB43A5ACE0B0CAB38DCD38");
                });

            entity.Property(e => e.ProductId)
            .HasMaxLength(15)
            .IsRequired();

            entity.Property(e => e.ChangeId)
                .IsRequired();

            entity.Property(e => e.CostType)
                .IsRequired();

            entity.Property(e => e.StatusId)
                .IsRequired();

            entity.Property(e => e.DraftDate)
                .HasColumnType("datetime")
                .IsRequired();

            entity.Property(e => e.SubmitDate)
                .HasColumnType("datetime")
                .IsRequired();

            entity.Property(e => e.CompleteDate)
                .HasColumnType("datetime")
                .IsRequired();

            entity.Property(e => e.DraftUserId)
                .IsRequired();

            entity.Property(e => e.SubmitUserId)
                .IsRequired();

            entity.Property(e => e.CompleteUserId)
                .IsRequired();

            entity.Property(e => e.UnitCostOld)
                .HasColumnType("money")
                .IsRequired();

            entity.Property(e => e.UnitCostNew)
                .HasColumnType("money")
                .IsRequired();
        });

        modelBuilder.Entity<Price>(entity =>
        {
            entity.ToTable("Prices", "dbo");

            entity.ToTable(tb =>
            {
                tb.HasTrigger("MSmerge_del_D2B0E261992B4C85941922C701D9C0E4");
                tb.HasTrigger("MSmerge_ins_D2B0E261992B4C85941922C701D9C0E4");
                tb.HasTrigger("MSmerge_upd_D2B0E261992B4C85941922C701D9C0E4");
            }); // Explicit table name and schema

            entity.Property(e => e.Prodnum)
                .HasColumnName("prodnum") // Map to actual SQL column name
                .HasMaxLength(16)
                .IsRequired();

            entity.Property(e => e.Order)
                .HasColumnName("order")
                .HasColumnType("money");

            entity.Property(e => e.OrderPromotion)
                .HasColumnName("order_promotion")
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.OrderPromotionStore)
                .HasColumnName("order_promotion_store")
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.SaleCeil)
                .HasColumnName("sale_ceil")
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.SaleFloor)
                .HasColumnName("sale_floor")
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.Sale)
                .HasColumnName("sale")
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.SaleStore)
                .HasColumnName("sale_store")
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.SalePromotion)
                .HasColumnName("sale_promotion")
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.SalePromotionStore)
                .HasColumnName("sale_promotion_store")
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.CreatedAt)
                .HasColumnName("created_at") // Fix column name
                .HasColumnType("datetime")
                .IsRequired();

            entity.Property(e => e.UpdatedAt)
                .HasColumnName("updated_at") // Fix column name
                .HasColumnType("datetime")
                .IsRequired();

            entity.Property(e => e.UpdatedBy)
                .HasColumnName("updated_by") // Fix column name
                .HasMaxLength(50);

            entity.Property(e => e.MinVolume)
                .HasColumnName("min_volume") // Fix column name
                .HasColumnType("float");

            entity.Property(e => e.VolumePrice)
                .HasColumnName("volume_price") // Fix column name
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.MinVolume2)
                .HasColumnName("min_volume2") // Fix column name
                .HasColumnType("float");

            entity.Property(e => e.VolumePrice2)
                .HasColumnName("volume_price2") // Fix column name
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.VolumePrice3)
                .HasColumnName("volume_price3") // Fix column name
                .HasColumnType("numeric(8,3)");

            entity.Property(e => e.MinVolume3)
                .HasColumnName("min_volume3") // Fix column name
                .HasColumnType("float");

            entity.Property(e => e.UnitsPerPackage)
                .HasColumnName("UnitsPerPackage") // Fix column name
                .HasColumnType("float");

            entity.Property(e => e.SupplierId)
                .HasColumnName("supplier_id") // Fix column name
                .HasColumnType("int");

            entity.Property(e => e.Ethnicity)
                .HasColumnName("ethnicity")
                .HasMaxLength(32);

            entity.Property(e => e.ApprovedBy)
                .HasColumnName("ApprovedBy") // Fix column name
                .HasMaxLength(50);

        });

        modelBuilder.Entity<Invoice>(entity =>
        {
            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_5CD6D960B95E41ED93BA81BE2CBFDEBD");
                    tb.HasTrigger("MSmerge_ins_5CD6D960B95E41ED93BA81BE2CBFDEBD");
                    tb.HasTrigger("MSmerge_upd_5CD6D960B95E41ED93BA81BE2CBFDEBD");
                });

            entity.Property(e => e.InvoiceID).ValueGeneratedNever();
            entity.Property(e => e.InvoiceNumber)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TotalAmount).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Supplier).WithMany(p => p.Invoices)
                .HasForeignKey(d => d.SupplierID)
                .HasConstraintName("FK_Invoices_SupplierID");
        });

        modelBuilder.Entity<InvoiceItem>(entity =>
        {
            entity.HasKey(e => e.InvoiceItemID).HasName("PK__InvoiceI__478FE0FC7F5D794B");

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_87EAD310D982406BB6BAF517D3EA4C31");
                    tb.HasTrigger("MSmerge_ins_87EAD310D982406BB6BAF517D3EA4C31");
                    tb.HasTrigger("MSmerge_upd_87EAD310D982406BB6BAF517D3EA4C31");
                });

            entity.Property(e => e.InvoiceItemID).ValueGeneratedNever();
            entity.Property(e => e.ProductID)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Quantity).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.SupplierDescription)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.SupplierProductCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TotalAmount)
                .HasComputedColumnSql("([Quantity]*[UnitPrice])", true)
                .HasColumnType("decimal(21, 4)");
            entity.Property(e => e.UnitPrice).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Invoice).WithMany(p => p.InvoiceItems)
                .HasForeignKey(d => d.InvoiceID)
                .HasConstraintName("FK__InvoiceIt__Invoi__7156D258");

            entity.HasOne(d => d.Product).WithMany(p => p.InvoiceItems)
                .HasForeignKey(d => d.ProductID)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__InvoiceIt__Produ__724AF691");
        });

        modelBuilder.Entity<Node>(entity =>
        {
            entity.ToTable(tb =>
            {
                tb.HasTrigger("MSmerge_del_146A3331B870402A8D13A13115FAA16C");
                tb.HasTrigger("MSmerge_ins_146A3331B870402A8D13A13115FAA16C");
                tb.HasTrigger("MSmerge_upd_146A3331B870402A8D13A13115FAA16C");
            });

            entity.Property(e => e.NodeID).ValueGeneratedNever();
            entity.Property(e => e.NodeName)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_A07DDA9FB0DD4B65B278398CB7AD9E8C");
                    tb.HasTrigger("MSmerge_ins_A07DDA9FB0DD4B65B278398CB7AD9E8C");
                    tb.HasTrigger("MSmerge_upd_A07DDA9FB0DD4B65B278398CB7AD9E8C");
                });

            entity.Property(e => e.OrderID)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CompleteDate)
                .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                .HasColumnType("datetime");
            entity.Property(e => e.DraftDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OrderStatusID).HasDefaultValue(1);
            entity.Property(e => e.SubmitDate)
                .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                .HasColumnType("datetime");

            entity.HasOne(d => d.OrderTypeNavigation).WithMany(p => p.Orders)
                .HasForeignKey(d => d.OrderType)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Orders_OrderType");

            entity.HasOne(d => d.Store).WithMany(p => p.Orders)
                .HasForeignKey(d => d.StoreID)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_Orders_StoreID");

            entity.HasOne(d => d.Supplier).WithMany(p => p.Orders)
                .HasForeignKey(d => d.SupplierID)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_Orders_SupplierID");
        });

        modelBuilder.Entity<OrderItem>(entity =>
        {
            entity.HasKey(e => new { e.OrderID, e.ProductItemID });

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_39386AE78CB04C03B22F67BC61247D22");
                    tb.HasTrigger("MSmerge_ins_39386AE78CB04C03B22F67BC61247D22");
                    tb.HasTrigger("MSmerge_upd_39386AE78CB04C03B22F67BC61247D22");
                });

            entity.Property(e => e.OrderID)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CompleteDate)
                .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                .HasColumnType("datetime");
            entity.Property(e => e.DraftDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.OrderItemStatusID).HasDefaultValue(1);
            entity.Property(e => e.SubmitDate)
                .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                .HasColumnType("datetime");
            entity.Property(e => e.TaxRate).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.UnitCost).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.UnitQty).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.UnitsPerPackage).HasDefaultValue(1);

            entity.HasOne(d => d.Order).WithMany(p => p.OrderItems)
                .HasForeignKey(d => d.OrderID)
                .HasConstraintName("FK_OrderItems_OrderID");

            entity.HasOne(d => d.ProductItem).WithMany(p => p.OrderItems)
                .HasForeignKey(d => d.ProductItemID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrderItems_ProductItemID");
        });

        modelBuilder.Entity<OrderStatus>(entity =>
        {
            entity.HasKey(e => e.StatusID);

            entity.ToTable("OrderStatus", tb =>
            {
                tb.HasTrigger("MSmerge_del_043CA78BF58949DB84934E4531CCC638");
                tb.HasTrigger("MSmerge_ins_043CA78BF58949DB84934E4531CCC638");
                tb.HasTrigger("MSmerge_upd_043CA78BF58949DB84934E4531CCC638");
            });

            entity.Property(e => e.StatusName)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasDefaultValue("UNDEFINED");
        });

        modelBuilder.Entity<OrderType>(entity =>
        {
            entity.ToTable("OrderType", tb =>
                {
                    tb.HasTrigger("MSmerge_del_D88089E5D3D64285A88918A702B75EEB");
                    tb.HasTrigger("MSmerge_ins_D88089E5D3D64285A88918A702B75EEB");
                    tb.HasTrigger("MSmerge_upd_D88089E5D3D64285A88918A702B75EEB");
                });

            entity.Property(e => e.OrderTypeID).ValueGeneratedNever();
            entity.Property(e => e.OrderTypeName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<PO>(entity =>
        {
            entity.HasKey(e => e.PO_ID).HasName("PK_POs_1");

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_CDC04E3E325647E58176F11BBA433F53");
                    tb.HasTrigger("MSmerge_ins_CDC04E3E325647E58176F11BBA433F53");
                    tb.HasTrigger("MSmerge_upd_CDC04E3E325647E58176F11BBA433F53");
                });

            entity.Property(e => e.PO_ID).HasMaxLength(255);
            entity.Property(e => e.DeliveryDate).HasColumnType("datetime");
            entity.Property(e => e.DeliveryTo).HasMaxLength(50);
            entity.Property(e => e.Invoice).HasMaxLength(50);
            entity.Property(e => e.Ordered_By).HasMaxLength(255);
            entity.Property(e => e.Ordered_Date).HasColumnType("datetime");
            entity.Property(e => e.Ordering_Date).HasColumnType("datetime");
            entity.Property(e => e.POApprovedDate).HasColumnType("datetime");
            entity.Property(e => e.PODraftDate).HasColumnType("datetime");
            entity.Property(e => e.PONote).HasMaxLength(255);
            entity.Property(e => e.Received_By).HasMaxLength(255);
            entity.Property(e => e.Received_Date).HasColumnType("datetime");
            entity.Property(e => e.SendToSupplier).HasDefaultValue(false);
            entity.Property(e => e.ShippedToWM)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .IsFixedLength();
            entity.Property(e => e.State).HasMaxLength(255);
            entity.Property(e => e.SupplierContact).HasMaxLength(50);
            entity.Property(e => e.Taxes).HasColumnType("money");
        });

        modelBuilder.Entity<PO_Detail>(entity =>
        {
            entity.HasKey(e => new { e.PO_ID, e.Product_ID, e.Store_ID });

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_D09D4AA0D3054480A5201186D2552D50");
                    tb.HasTrigger("MSmerge_ins_D09D4AA0D3054480A5201186D2552D50");
                    tb.HasTrigger("MSmerge_upd_D09D4AA0D3054480A5201186D2552D50");
                });

            entity.Property(e => e.PO_ID)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Product_ID)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Confirm).HasDefaultValue(0);
            entity.Property(e => e.OrderedBy).HasMaxLength(255);
            entity.Property(e => e.OrderingDate).HasColumnType("datetime");
            entity.Property(e => e.PaidItems).HasDefaultValue(1);
            entity.Property(e => e.ReceivedBy).HasMaxLength(255);
            entity.Property(e => e.ReceivingDate).HasColumnType("datetime");
            entity.Property(e => e.ShippedDate).HasColumnType("datetime");
            entity.Property(e => e.ShippedStatus).HasDefaultValue(false);
            entity.Property(e => e.TaxRate).HasDefaultValue(0.0);
            entity.Property(e => e.Taxable).HasDefaultValue(false);
            entity.Property(e => e.UnitPODraftPrice).HasColumnType("money");
        });

        modelBuilder.Entity<Product>((Action<Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Product>>)(entity =>
        {
            entity.HasKey(e => (object)e.ProductID);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_199FD08279C7495EA120F955737A561C");
                    tb.HasTrigger("MSmerge_ins_199FD08279C7495EA120F955737A561C");
                    tb.HasTrigger("MSmerge_upd_199FD08279C7495EA120F955737A561C");
                });

            entity.Property<string>(e => (string)e.ProductID)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Barcode)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CountryOfOrigin)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Department).HasMaxLength(20);
            entity.Property(e => e.Last_Ord_Date)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Measure)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ModTimeStamp)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.PackageSpec)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Prod_Alias).HasMaxLength(40);
            entity.Property(e => e.Prod_Desc)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.ProductName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Source).HasMaxLength(15);
            entity.Property(e => e.SuggestSalePrice).HasColumnType("money");
            entity.Property(e => e.UPC)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.UnitSizeUom)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Unit_Cost).HasColumnType("money");
        }));

        modelBuilder.Entity<ProductItem>(entity =>
        {
            entity.HasKey(e => e.ItemID);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_DDC6437CB71644D0A61E6FCE8D932606");
                    tb.HasTrigger("MSmerge_ins_DDC6437CB71644D0A61E6FCE8D932606");
                    tb.HasTrigger("MSmerge_upd_DDC6437CB71644D0A61E6FCE8D932606");
                });

            entity.Property(e => e.ItemID).ValueGeneratedNever();
            entity.Property(e => e.CreateTimeStamp).HasColumnType("datetime");
            entity.Property(e => e.ItemDesc)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ItemSigningDesc)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ProductID)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.SupplierProductCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SupplierProductDescription)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UnitCost).HasColumnType("money");
            entity.Property(e => e.UnitRetail).HasColumnType("money");
            entity.Property(e => e.UpdateTimeStamp).HasColumnType("datetime");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductItems)
                .HasForeignKey(d => d.ProductID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductItems_ProductID");

            entity.HasOne(d => d.Supplier).WithMany(p => p.ProductItems)
                .HasForeignKey(d => d.SupplierID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductItems_SupplierID");
        });

        modelBuilder.Entity<ProductMovement>(entity =>
        {
            entity.HasKey(e => new { e.OrderID, e.MovementID });

            entity.ToTable("ProductMovement", tb =>
                {
                    tb.HasTrigger("MSmerge_del_4AD3D147B1E943E586C5B108D5825678");
                    tb.HasTrigger("MSmerge_ins_4AD3D147B1E943E586C5B108D5825678");
                    tb.HasTrigger("MSmerge_upd_4AD3D147B1E943E586C5B108D5825678");
                });

            entity.Property(e => e.OrderID)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CompleteDate)
                .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                .HasColumnType("datetime");
            entity.Property(e => e.DestinationStorageAreaID).HasDefaultValue(0);
            entity.Property(e => e.DraftDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Quantity).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.SubmitDate)
               .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
               .HasColumnType("datetime");
            entity.Property(e => e.TotalCost).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Order).WithMany(p => p.ProductMovements)
                .HasForeignKey(d => d.OrderID)
                .HasConstraintName("FK_ProductMovement_OrderID");
        });

        modelBuilder.Entity<ProductMovementItem>(entity =>
        {
            entity.HasKey(e => new { e.OrderID, e.MovementID, e.ProductItemID });

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_F11ABE7B34D94440937123B3FE77F679");
                    tb.HasTrigger("MSmerge_ins_F11ABE7B34D94440937123B3FE77F679");
                    tb.HasTrigger("MSmerge_upd_F11ABE7B34D94440937123B3FE77F679");
                });

            entity.Property(e => e.OrderID)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CompleteDate)
                .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                .HasColumnType("datetime");
            entity.Property(e => e.DraftDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.QuantityRemaining).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.SubmitDate)
                .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                .HasColumnType("datetime");
            entity.Property(e => e.TaxRate).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.UnitCost).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.UnitQty).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.ProductItem).WithMany(p => p.ProductMovementItems)
                .HasForeignKey(d => d.ProductItemID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductMovementItems_ProductItemID");

            entity.HasOne(d => d.ProductMovement).WithMany(p => p.ProductMovementItems)
                .HasForeignKey(d => new { d.OrderID, d.MovementID })
                .HasConstraintName("FK_ProductMovementItems_ProductMovement");
        });

        modelBuilder.Entity<Products_Store>(entity =>
        {
            entity.HasKey(e => new { e.ProductID, e.Store_ID });

            entity.ToTable("Products_Store", tb =>
                {
                    tb.HasTrigger("MSmerge_del_88332938773C4D9F89F5252F7FF2324F");
                    tb.HasTrigger("MSmerge_ins_88332938773C4D9F89F5252F7FF2324F");
                    tb.HasTrigger("MSmerge_upd_88332938773C4D9F89F5252F7FF2324F");
                });

            entity.Property(e => e.ProductID)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Barcode)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ConvUnit)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Department).HasMaxLength(20);
            entity.Property(e => e.DeptCode)
                .IsRequired()
                .HasMaxLength(2)
                .HasDefaultValue("00");
            entity.Property(e => e.EnvDepLink)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.GM_ProdProfit).HasColumnType("money");
            entity.Property(e => e.GM_UCost).HasColumnType("money");
            entity.Property(e => e.ItemBonus).HasColumnType("money");
            entity.Property(e => e.Last_Ord_Date)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.LastyearProfit).HasColumnType("money");
            entity.Property(e => e.LastyearSale).HasColumnType("money");
            entity.Property(e => e.Level2Code)
                .IsRequired()
                .HasMaxLength(2)
                .HasDefaultValue("");
            entity.Property(e => e.Level3Code)
                .IsRequired()
                .HasMaxLength(2)
                .HasDefaultValue("");
            entity.Property(e => e.MasterProdNum)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Measure)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ModTimeStamp)
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.PackageSpec)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PackageSpec2)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Prod_Alias).HasMaxLength(40);
            entity.Property(e => e.Prod_Desc)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.ProductName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.QtyGroup)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.Source).HasMaxLength(15);
            entity.Property(e => e.SuggestSalePrice).HasColumnType("money");
            entity.Property(e => e.Tot_Profit).HasColumnType("money");
            entity.Property(e => e.Tot_Sales).HasColumnType("money");
            entity.Property(e => e.Unit_Cost).HasColumnType("money");
            entity.Property(e => e.Warranty)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Store>(entity =>
        {
            entity.HasKey(e => e.Store_ID);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_7875753A467D45598D2E6EE4A1DD2512");
                    tb.HasTrigger("MSmerge_ins_7875753A467D45598D2E6EE4A1DD2512");
                    tb.HasTrigger("MSmerge_upd_7875753A467D45598D2E6EE4A1DD2512");
                });

            entity.Property(e => e.Store_ID).ValueGeneratedNever();
            entity.Property(e => e.Active)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Address).HasMaxLength(60);
            entity.Property(e => e.City).HasMaxLength(15);
            entity.Property(e => e.ContactName).HasMaxLength(30);
            entity.Property(e => e.ContactTitle).HasMaxLength(30);
            entity.Property(e => e.Country).HasMaxLength(15);
            entity.Property(e => e.Fax).HasMaxLength(24);
            entity.Property(e => e.HostName)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.NextPOID).HasDefaultValue(1);
            entity.Property(e => e.Phone).HasMaxLength(24);
            entity.Property(e => e.PostalCode).HasMaxLength(10);
            entity.Property(e => e.Region).HasMaxLength(15);
            entity.Property(e => e.StoreFullName).HasMaxLength(40);
            entity.Property(e => e.StoreName)
                .IsRequired()
                .HasMaxLength(40);
        });

        modelBuilder.Entity<StoreFloorLocation>(entity =>
        {
            entity.HasKey(e => e.StoreLocationID).HasName("PK__StoreFlo__A130597CF7003A73");

            entity.ToTable("StoreFloorLocation", tb =>
                {
                    tb.HasTrigger("MSmerge_del_CD018865A07B418DA6A876D5A61A5804");
                    tb.HasTrigger("MSmerge_ins_CD018865A07B418DA6A876D5A61A5804");
                    tb.HasTrigger("MSmerge_upd_CD018865A07B418DA6A876D5A61A5804");
                });

            entity.Property(e => e.StoreLocationID).ValueGeneratedNever();
            entity.Property(e => e.Aisle)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Capacity).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Location)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Section)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Side)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.Store).WithMany(p => p.StoreFloorLocations)
                .HasForeignKey(d => d.StoreID)
                .HasConstraintName("FK__StoreFloo__Store__36147A4B");
        });

        modelBuilder.Entity<StoreFloorLocationType>(entity =>
        {
            entity.HasKey(e => e.LocationTypeID).HasName("PK__StoreFloorLocationType");

            entity.ToTable("StoreFloorLocationType", tb =>
                {
                    tb.HasTrigger("MSmerge_del_DB4E3939D9E04E84ABE4C6930E029C6A");
                    tb.HasTrigger("MSmerge_ins_DB4E3939D9E04E84ABE4C6930E029C6A");
                    tb.HasTrigger("MSmerge_upd_DB4E3939D9E04E84ABE4C6930E029C6A");
                });

            entity.Property(e => e.LocationTypeID).ValueGeneratedNever();
            entity.Property(e => e.LocationTypeDesc)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Supplier>(entity =>
        {
            entity.HasKey(e => e.Supplier_ID);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_A413810C4C1C4F91AF9945932797F472");
                    tb.HasTrigger("MSmerge_ins_A413810C4C1C4F91AF9945932797F472");
                    tb.HasTrigger("MSmerge_upd_A413810C4C1C4F91AF9945932797F472");
                });

            entity.Property(e => e.Supplier_ID).ValueGeneratedNever();
            entity.Property(e => e.Addr).HasMaxLength(255);
            entity.Property(e => e.Address).HasMaxLength(60);
            entity.Property(e => e.BankInfo).HasMaxLength(16);
            entity.Property(e => e.CellNumber).HasMaxLength(50);
            entity.Property(e => e.City).HasMaxLength(15);
            entity.Property(e => e.CompanyName).HasMaxLength(255);
            entity.Property(e => e.ContactName).HasMaxLength(30);
            entity.Property(e => e.ContactTitle).HasMaxLength(30);
            entity.Property(e => e.Country).HasMaxLength(15);
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.Fax).HasMaxLength(255);
            entity.Property(e => e.GSTNumber).HasMaxLength(50);
            entity.Property(e => e.HomePage).HasMaxLength(255);
            entity.Property(e => e.Payment_Supplier_ID).HasColumnName("Payment Supplier_ID");
            entity.Property(e => e.Phone).HasMaxLength(24);
            entity.Property(e => e.Post_Code)
                .HasMaxLength(255)
                .HasColumnName("Post Code");
            entity.Property(e => e.PostalCode).HasMaxLength(10);
            entity.Property(e => e.Region).HasMaxLength(15);
            entity.Property(e => e.SafetyLicense).HasMaxLength(255);
            entity.Property(e => e.Tel).HasMaxLength(255);
        });

        modelBuilder.Entity<Suppliers_Store>(entity =>
        {
            entity.HasKey(e => new { e.Supplier_ID, e.Store_ID });

            entity.ToTable("Suppliers_Store", tb =>
                {
                    tb.HasTrigger("MSmerge_del_D7124AF020CE4B5BA249BFFEE46B2BE2");
                    tb.HasTrigger("MSmerge_ins_D7124AF020CE4B5BA249BFFEE46B2BE2");
                    tb.HasTrigger("MSmerge_upd_D7124AF020CE4B5BA249BFFEE46B2BE2");
                });

            entity.Property(e => e.Addr).HasMaxLength(255);
            entity.Property(e => e.CompanyName).HasMaxLength(255);
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.Fax).HasMaxLength(255);
            entity.Property(e => e.Payment_Supplier_ID).HasColumnName("Payment Supplier_ID");
            entity.Property(e => e.Post_Code)
                .HasMaxLength(255)
                .HasColumnName("Post Code");
            entity.Property(e => e.SafetyLicense).HasMaxLength(255);
            entity.Property(e => e.Tel).HasMaxLength(255);
        });

        modelBuilder.Entity<Warehouse>(entity =>
        {
            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_C72D3767D7A04F5687FBD7CCCF6F35CA");
                    tb.HasTrigger("MSmerge_ins_C72D3767D7A04F5687FBD7CCCF6F35CA");
                    tb.HasTrigger("MSmerge_upd_C72D3767D7A04F5687FBD7CCCF6F35CA");
                });

            entity.Property(e => e.WarehouseID).ValueGeneratedNever();
            entity.Property(e => e.Location)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.WarehouseName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<WarehouseStorageArea>(entity =>
        {
            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_1C72ABE6405B47F0B2CD1A00A5AA1137");
                    tb.HasTrigger("MSmerge_ins_1C72ABE6405B47F0B2CD1A00A5AA1137");
                    tb.HasTrigger("MSmerge_upd_1C72ABE6405B47F0B2CD1A00A5AA1137");
                });

            entity.Property(e => e.WarehouseStorageAreaID).ValueGeneratedNever();
            entity.Property(e => e.AllocationSize).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.AreaType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("UNDEFINED");
            entity.Property(e => e.TemperatureZone)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasDefaultValue("REGULAR");
            entity.Property(e => e.WarehouseStorageAreaName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("UNDEFINED");

            entity.HasOne(d => d.Store).WithMany(p => p.WarehouseStorageAreas)
                .HasForeignKey(d => d.StoreID)
                .HasConstraintName("FK_WarehouseStorageAreas_StoreID");

            entity.HasOne(d => d.Warehouse).WithMany(p => p.WarehouseStorageAreas)
                .HasForeignKey(d => d.WarehouseID)
                .HasConstraintName("FK_WarehouseStorageAreas_WarehouseID");
        });

        modelBuilder.Entity<WarehouseStorageLocation>(entity =>
        {
            entity.HasKey(e => e.WarehouseLocationID);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("MSmerge_del_707BB32A99B447B09508571A83C2BE62");
                    tb.HasTrigger("MSmerge_ins_707BB32A99B447B09508571A83C2BE62");
                    tb.HasTrigger("MSmerge_upd_707BB32A99B447B09508571A83C2BE62");
                });

            entity.Property(e => e.WarehouseLocationID).ValueGeneratedNever();
            entity.Property(e => e.Capacity).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.LocationName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("UNDEFINED");

            entity.HasOne(d => d.WarehouseStorageArea).WithMany(p => p.WarehouseStorageLocations)
                .HasForeignKey(d => d.WarehouseStorageAreaID)
                .HasConstraintName("FK_WarehouseStorageLocations_WarehouseStorageAreaID");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}